parameters:
- name: project
  displayName: Project Name
  type: string
  default: atlassian
  values:
  - flanksource
  - OldMutual
  - atlassian

- name: repository
  displayName: Repository Name
  type: string
  default: github-for-jira
  values:
  - canary-checker
  - infrastructure
  - github-for-jira

- name: repotype
  displayName: Repository Type
  type: string
  default: github
  values:
  - github
  - git
  - bitbucket

- name: endpoint
  displayName: Endpoint
  type: string
  default: edeediong
  values:
  - test
  - edeediong
  

variables:
  - name: repository_name
    value: ${{ parameters.repository }}

  - name: project_name
    value: ${{ parameters.project }}

  - name: repo_type
    value: ${{ parameters.repotype }}

  - name: endpoint_name
    value: ${{ parameters.endpoint }}

pool:
  vmImage: 'Ubuntu-latest'

resources:
  repositories:
  - repository: $(repository_name) 
    type: $(repo_type)
    name: $(project_name)/$(repository_name)  
    endpoint: $(endpoint_name)

steps:
  - checkout: $(repository)
        
  
  - task: Bash@3
    displayName: Extract Jira IDs
    inputs:
      targetType: 'inline' 
      script: |
        echo "## Release Notes" > $(Build.ArtifactStagingDirectory)/release-notes.md
        cd '$(System.DefaultWorkingDirectory)' && git log > log.txt
        Encoded="ID%20in%20"
        JiraID=$(cat log.txt | grep -Po '\w+-\d+' | sort | uniq | sed -z 's/\n/,/g;s/,$/\n/')
        URL="https://oldmutual.atlassian.net/issues/?jql=${Encoded}(${JiraID})"
        echo "- **Jira URL:** [Click Here to Access Jira URL]($URL)" >> $(Build.ArtifactStagingDirectory)/release-notes.md
        cat $(Build.ArtifactStagingDirectory)/release-notes.md

  - task: Bash@3
    displayName: Git Commit Messages
    inputs:
      targetType: 'inline' 
      script: |
        echo "## Commit History From $(date)" >> $(Build.ArtifactStagingDirectory)/release-notes.md
        git log --pretty="* **%s** (%an)" --since="$(date)" -i -E --grep="feat:|fix:" >> $(Build.ArtifactStagingDirectory)/release-notes.md

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'